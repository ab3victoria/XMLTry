[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\Shlomi\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\Shlomi\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.5.5 (Oracle Corporation Java 1.8.0_281)
[debug]       Load.loadUnit: plugins took 43.6183ms
[debug]       Load.loadUnit: defsScala took 0.1475ms
[debug] [Loading] Scanning directory C:\Users\Shlomi\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Shlomi\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 8.9286 ms
[debug]           Load.resolveProject(global-plugins) took 25.5228ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Shlomi\.sbt\1.0\plugins, plugins: List(<none>))) took 54.3741ms
[debug] [Loading] Done in C:\Users\Shlomi\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 67.4279ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.1369ms
[debug]     Load.loadUnit(file:/C:/Users/Shlomi/.sbt/1.0/plugins/, ...) took 114.9593ms
[debug]   Load.apply: load took 196.5958ms
[debug]   Load.apply: resolveProjects took 3.2508ms
[debug]   Load.apply: finalTransforms took 27.3845ms
[debug]   Load.apply: config.delegates took 4.0921ms
[debug]   Load.apply: Def.make(settings)... took 163.034ms
[debug]   Load.apply: structureIndex took 44.2873ms
[debug]   Load.apply: mkStreams took 1.1186ms
[info] loading global plugins from C:\Users\Shlomi\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 1278.5556ms
[debug]           Load.loadUnit: plugins took 12.8843ms
[debug]           Load.loadUnit: defsScala took 0.0022ms
[debug] [Loading] Scanning directory C:\Users\Shlomi\Desktop\XMLTry\project
[debug]             Load.loadUnit: mkEval took 4.045ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Shlomi\Desktop\XMLTry\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 0.9926 ms
[info] loading settings for project xmltry-build from idea.sbt ...
[debug]               Load.resolveProject(xmltry-build) took 5.3649ms
[debug]             Load.loadTransitive: finalizeProject(Project(id xmltry-build, base: C:\Users\Shlomi\Desktop\XMLTry\project, plugins: List(<none>))) took 6.6658ms
[debug] [Loading] Done in C:\Users\Shlomi\Desktop\XMLTry\project, returning: (xmltry-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 72.8448ms
[debug]           Load.loadUnit: cleanEvalClasses took 2.1916ms
[debug]         Load.loadUnit(file:/C:/Users/Shlomi/Desktop/XMLTry/project/, ...) took 88.4479ms
[debug]       Load.apply: load took 89.1285ms
[debug]       Load.apply: resolveProjects took 0.0775ms
[debug]       Load.apply: finalTransforms took 3.347ms
[debug]       Load.apply: config.delegates took 0.164ms
[debug]       Load.apply: Def.make(settings)... took 28.128ms
[debug]       Load.apply: structureIndex took 12.033ms
[debug]       Load.apply: mkStreams took 0.0023ms
[info] loading project definition from C:\Users\Shlomi\Desktop\XMLTry\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 825.3814ms
[debug]     Load.loadUnit: defsScala took 0.0022ms
[debug] [Loading] Scanning directory C:\Users\Shlomi\Desktop\XMLTry
[debug]       Load.loadUnit: mkEval took 0.1295ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Shlomi\Desktop\XMLTry, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.2096 ms
[info] loading settings for project xmltry from build.sbt ...
[debug]         Load.resolveProject(xmltry) took 19.6253ms
[debug]       Load.loadTransitive: finalizeProject(Project(id xmltry, base: C:\Users\Shlomi\Desktop\XMLTry, plugins: List(<none>))) took 21.4911ms
[debug] [Loading] Done in C:\Users\Shlomi\Desktop\XMLTry, returning: (xmltry)
[debug]     Load.loadUnit: loadedProjectsRaw took 1208.0964ms
[debug]     Load.loadUnit: cleanEvalClasses took 5.9708ms
[debug]   Load.loadUnit(file:/C:/Users/Shlomi/Desktop/XMLTry/, ...) took 2039.8109ms
[debug] Load.apply: load took 2040.9617ms
[debug] Load.apply: resolveProjects took 0.0668ms
[debug] Load.apply: finalTransforms took 11.5674ms
[debug] Load.apply: config.delegates took 0.1518ms
[debug] Load.apply: Def.make(settings)... took 41.334ms
[debug] Load.apply: structureIndex took 9.3264ms
[debug] Load.apply: mkStreams took 0.0018ms
[info] set current project to XMLTry (in build file:/C:/Users/Shlomi/Desktop/XMLTry/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 54302 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 54302, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to XMLTry (in build file:/C:/Users/Shlomi/Desktop/XMLTry/)
[debug] > Exec(idea-shell, None, None)
